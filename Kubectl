
**** Kind *****
kind create cluster

kind get clusters

kind delete cluster

*** Alias (Bash) ***

alias k=kubectl
complete -F __start_kubectl k

**********************************
*** Kubectl ***
*********************************

#Versão
kubectl version --client=true

#Informações do Cluster
kubectl cluster-info

# Documentação
  
  kubectl explain deployment

# View all the resources 

  - deployed to the cluster in the Default Namespace: 
    kubectl get all

  - View all the resources deployed to the cluster in all of the Namespaces: 
    kubectl get all --all-namespaces

  - View all the supported resource types
    kubectl api-resources

# Obter Nodes
  kubectl get nodes

#Expondo uma porta da maquina
kubectl expose deployment first-deployment --port=80 --type=NodePort

# The command below finds the allocated port and executes a HTTP request.

export PORT=$(kubectl get svc first-deployment -o go-template='{{range.spec.ports}}{{if .nodePort}}{{.nodePort}}{{"\n"}}{{end}}{{end}}')
echo "Accessing host01:$PORT"
curl host01:$PORT
#Criar um pod pu demais objetos
kubectl apply -f [arquivo.yaml]

#Criar objetos de uma pasta
kubectl apply -f ../Pasta/


### PODS ###
  # Visualizar todos os Pods
    - kubectl get all -A

    - kubectl get pods

    - kubectl get po -n 'namespace'

    - All pods and Pods System
      kubectl get pods -A

    - All pods sort by 'podId'
      kubectl get pod -o wide --sort-by=.status.podIP

  # Deletar pod
    kubectl delete pod [nome-pod]

    kubectl delete -f [arquivo.yaml]

#Obter Informações sobre objetos
kubectl explain pods

#Deployment

   # Edit
     kubectl edit [Nome Deployment]
 
   # Describe Deployment
     kubectl describe deployment nginx-deployment -n default
     
   # Describe All Deployment 
     kubectl describe deployment -n kube-system -A
   
   # Get Definition
     kubectl get deploy  nginx-deployment -o json

   # Get Deployed Objects
     -- All objects, without system objects
     kubectl get deployment 
     
     --All object and System Objects
     kubectl get deployment -A 
   
     -- Get Definition the system Object
     kubectl get deployment  -n kube-system -o yaml  | grep coredns
   
   # Get Deployment Definition
     kubectl get deploy  nginx-deployment -o json

   # Rollback Deployment
     kubectl rollout undo deployment/[Deployment Name]
    

# View all the supported resource types (possible determine if a resource is namespaced)
  kubectl api-resources

#Namespaces

 -- Get all object determine namespaces
    kubectl get all -n 'namespaceName'
 
  --Delete ns and every one of those objects
    kubectl delete ns 'name' 


### Administration

  ## Context

    #Overview  
      A context is a group of access parameters. Each context contains a Kubernetes cluster, a user, and a namespace
    
    # View all contexts of the current cluster 
      kubectl config get-contexts

    # review the current kubectl configuration the current cluster. 
      kubectl config view

    # list of all our configured clusters we have access to:
      kubectl config get-clusters

    # Create new Context
      kubectl config set-context dev-context --cluster kubernetes --user=kubernetes-admin

    # To switch to another context
      kubectl config use-context dev-context

    # Kubectx

      - To switch to another context
         kubectx dev-context
  
      - List all Context
         kubectx
